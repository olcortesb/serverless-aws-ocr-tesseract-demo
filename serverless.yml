# Welcome to Serverless!
#
# Happy Coding!

service: serverless-aws-ocr-tesseract-demo

frameworkVersion: '3'

useDotenv: true

package:
  exclude:
    - 'layer.zip'

custom:
  stage: ${opt:stage, 'dev'}

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  apiGateway:
    apiKeys:
      - ocr-tesseract-apikey-${self:custom.stage}
  environment:
    SQS_URL: { 'Fn::GetAtt': ['ProcessText', 'QueueName'] }
  iam:
    role:
      statements:
      - Effect: "Allow"
        Action:
          - "sqs:SendMessage"
          - "sqs:GetQueueUrl"
        Resource: 
          - "arn:aws:sqs:${self:provider.region}:${env:ACCOUNT}:${opt:stage}-process-text"
      - Effect: "Allow"
        Action:
          - "sqs:ListQueues"
        Resource: 
          - "arn:aws:sqs:${self:provider.region}:${env:ACCOUNT}:*"

layers:
  tesseratjs:
    package:
      artifact: ./layer.zip

functions:
  hello:
    handler: handler.hello
    memorySize: 3008
    timeout: 500
    layers:
      - { Ref: TesseratjsLambdaLayer }
    events:
      - http:
          path: call
          method: get
          private: true
  listen: 
    handler: handler.listen
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - ProcessText
              - Arn

resources:
  Resources:
    ProcessText:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${opt:stage}-process-text
